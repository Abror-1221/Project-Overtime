// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Overtime_Project.Context;

namespace Overtime_Project.Migrations
{
    [DbContext(typeof(OvertimeContext))]
    partial class OvertimeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Overtime_Project.Models.Account", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NIK");

                    b.ToTable("TB_M_Account");
                });

            modelBuilder.Entity("Overtime_Project.Models.Kind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Kind");
                });

            modelBuilder.Entity("Overtime_Project.Models.Overtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndTime")
                        .HasColumnType("int");

                    b.Property<int?>("KindId")
                        .HasColumnType("int");

                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StartTime")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TotalReimburse")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KindId");

                    b.HasIndex("NIK");

                    b.HasIndex("StatusId");

                    b.ToTable("TB_M_Overtime");
                });

            modelBuilder.Entity("Overtime_Project.Models.Person", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("NIK");

                    b.ToTable("TB_M_Person");
                });

            modelBuilder.Entity("Overtime_Project.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Role");
                });

            modelBuilder.Entity("Overtime_Project.Models.RoleAccount", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("NIK", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("TB_T_RoleAccount");
                });

            modelBuilder.Entity("Overtime_Project.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Status");
                });

            modelBuilder.Entity("Overtime_Project.Models.Account", b =>
                {
                    b.HasOne("Overtime_Project.Models.Person", "Person")
                        .WithOne("Account")
                        .HasForeignKey("Overtime_Project.Models.Account", "NIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Overtime_Project.Models.Overtime", b =>
                {
                    b.HasOne("Overtime_Project.Models.Kind", null)
                        .WithMany("Overtimes")
                        .HasForeignKey("KindId");

                    b.HasOne("Overtime_Project.Models.Person", "Person")
                        .WithMany("Overtime")
                        .HasForeignKey("NIK");

                    b.HasOne("Overtime_Project.Models.Status", null)
                        .WithMany("Overtimes")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Overtime_Project.Models.RoleAccount", b =>
                {
                    b.HasOne("Overtime_Project.Models.Account", "Account")
                        .WithMany("RoleAccounts")
                        .HasForeignKey("NIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overtime_Project.Models.Role", "Role")
                        .WithMany("RoleAccounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Overtime_Project.Models.Account", b =>
                {
                    b.Navigation("RoleAccounts");
                });

            modelBuilder.Entity("Overtime_Project.Models.Kind", b =>
                {
                    b.Navigation("Overtimes");
                });

            modelBuilder.Entity("Overtime_Project.Models.Person", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Overtime");
                });

            modelBuilder.Entity("Overtime_Project.Models.Role", b =>
                {
                    b.Navigation("RoleAccounts");
                });

            modelBuilder.Entity("Overtime_Project.Models.Status", b =>
                {
                    b.Navigation("Overtimes");
                });
#pragma warning restore 612, 618
        }
    }
}
